#!/bin/bash

MATRIX=(4096)
TILE=(1024)
TPM_THREADS=16
CASE=({1..1})
ITER=({1..1})

export TPM_PAPI_SET=0
export TPM_POWER_SET=1

ROOT=/home/xps/Work/Software
TPM=${ROOT}/TPM
CHAMELEON=${ROOT}/chameleon-tpm/build/bin

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/${ROOT}/OpenBLAS/build/lib
export OPENBLAS_NUM_THREADS=1

cd $TPM/tracelib && rm -rf CMakeFiles/ cmake_install.cmake CMakeCache.txt Makefile libTPMLibrary.so
cmake .
make -s clean && make -s
cd -
cd $TPM/power && rm -rf CMakeFiles/ cmake_install.cmake CMakeCache.txt Makefile TPMpower
cmake .
make -s clean && make -s
cd -

TRACELIB_PRELOAD=${TPM}/tracelib/libTPMLibrary.so

if [ $TPM_PAPI_SET -eq 1 ];
then
    TPM_THREADS=1
    CASE=(1)
fi

export TPM_THREADS=$TPM_THREADS
lowest_freq=$(cpufreq-info -l | awk '{print $1}')
default_freq=$(cpufreq-info -l | awk '{print $2}')

while IFS= read -r algorithm
do
    for matrix in ${MATRIX[*]}
    do
        for tile in ${TILE[*]}
        do
            for iteration in ${ITER[*]}
            do
                for case in ${CASE[*]}
                do
                    export TPM_ALGORITHM=$algorithm
                    export TPM_MATRIX=$matrix
                    export TPM_TILE=$tile
                    export TPM_ITER=$iteration
                    
                    if [ $TPM_PAPI_SET -eq 1 ];
                    then
                        echo "*** TPM: Measuring PAPI counters"
                        FREQUENCIES=(MIN DEFAULT)
                        for frequency in ${FREQUENCIES[*]};
                        do
                            if [ $frequency = "MIN" ];
                            then
                                export TPM_FREQUENCY=$lowest_freq
                                sudo cpufreq-set -c 0 -u $lowest_freq
                            else
                                export TPM_FREQUENCY=$default_freq
                                sudo cpufreq-set -c 0 -u $default_freq
                            fi
                            LD_PRELOAD=$OPENMP_PRELOAD:$TRACELIB_PRELOAD numactl --physcpubind=0 --membind=0 ${CHAMELEON}/chameleon_dtesting -w -o $algorithm -t $TPM_THREADS -m $matrix -n $matrix -k $matrix -b $tile -i $tile
                        done
                        echo "*** TPM: Measuring PAPI done" $algorithm "with parameters" $matrix $tile
                    fi
                    
                    if [ $TPM_POWER_SET -eq 1 ];
                    then
                        echo "*** TPM: Measuring energy/case"

                        sudo -E ${TPM}/power/TPMpower $case $lowest_freq $default_freq &
                        echo "*** TPM: Power server launched"
                    
                        LD_PRELOAD=$OPENMP_PRELOAD:$TRACELIB_PRELOAD numactl --physcpubind=0-$(expr $TPM_THREADS - 1) --membind=0 ${CHAMELEON}/chameleon_dtesting -w -o $algorithm -t $TPM_THREADS -m $matrix -n $matrix -k $matrix -b $tile -i $tile
                        echo "*** TPM: Measuring energy/case done" $algorithm "case" $case "with parameters" $TPM_THREADS $matrix $tile
                    fi
                done
            done
        done
    done
done < benchmarks/benchmarks2.txt

ps -ef | grep TPMpower | grep -v grep | awk '{print $2}' | sudo xargs -r kill -9
echo "*** TPM: Submission finished"