#!/bin/bash

ALGORITHMS=($1)
#MATRIX=(8192 12288 16384 20480 24576 28672 32768 36864 40960)
MATRIX=(8192 10240 12288 14336 16384 18432 20480 22528 24576)
TILE=(256 512 1024 2048)
TPM_THREADS=$2
MEMBIND=2
ITER=({1..3})
NCASES=16
PAPI_EVENTSET=({1..4})
TEST=0

if [ $ALGORITHMS == "sparselu"];
then
    MATRIX=(64 96 128 160 192 224 256 288 320)
    TILE=(16 24 32 48)
fi

export TPM_PAPI_SET=$3
export TPM_POWER_SET=$4
export TPM_TASK_TIME=0
export TPM_TASK_TIME_TASK="potrf"

if [ $TPM_PAPI_SET -eq 1 ]; then
    TPM_THREADS=1
    CASE=(1)
fi

export OMP_NUM_THREADS=$TPM_THREADS

if [ $TEST -eq 1 ]; then
    ALGORITHMS=($1)
    MATRIX=(4096)
    TILE=(512)
    NCASES=1
fi

ROOT=/home/cc
TPM=${ROOT}/TPM
TPM_BENCHMARKS=${TPM}/benchmarks_tpm

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/${ROOT}/OpenBLAS/build/lib
export OPENBLAS_NUM_THREADS=1

cd $TPM/tracelib && rm -rf CMakeFiles/ cmake_install.cmake CMakeCache.txt Makefile libTPMLibrary.so
cmake .
make -s clean && make -s
cd -
cd $TPM/power && rm -rf CMakeFiles/ cmake_install.cmake CMakeCache.txt Makefile TPMpower
cmake .
make -s clean && make -s
cd -
cd $TPM/benchmarks_tpm && make clean -s && make -s
cd -

TRACELIB_PRELOAD=${TPM}/tracelib/libTPMLibrary.so
OPENMP_PRELOAD=${ROOT}/llvm-project/build-openmp/lib/libomp.so

export TPM_THREADS=$TPM_THREADS
lowest_freq=$(cpufreq-info -l | awk '{print $1}')
default_freq=$(cpufreq-info -l | awk '{print $2}')

ulimit -s unlimited

for algorithm in ${ALGORITHMS[*]}; do
    for matrix in ${MATRIX[*]}; do
        for tile in ${TILE[*]}; do
            for iteration in ${ITER[*]}; do
                export TPM_ALGORITHM=$algorithm
                export TPM_MATRIX=$matrix
                export TPM_TILE=$tile
                export TPM_ITER=$iteration
                if [ $TPM_PAPI_SET -eq 1 ]; then
                    for papi_events in ${PAPI_EVENTSET[*]}; do
                        export TPM_PAPI_COUNTERS=$papi_events
                        echo "*** TPM: Measuring PAPI counters for eventset" $papi_events
                        FREQUENCIES=(MIN DEFAULT)
                        for frequency in ${FREQUENCIES[*]}; do
                            if [ $frequency = "MIN" ]; then
                                export TPM_FREQUENCY=$lowest_freq
                                sudo cpufreq-set -c 0 -u $lowest_freq
                            else
                                export TPM_FREQUENCY=$default_freq
                                sudo cpufreq-set -c 0 -u $default_freq
                            fi
                            LD_PRELOAD=$OPENMP_PRELOAD:$TRACELIB_PRELOAD numactl --physcpubind=0 --membind=0 ${TPM_BENCHMARKS}/tpm_benchmark -a $algorithm -m $matrix -b $tile
                        done
                        echo "*** TPM: Measuring PAPI done" $algorithm "with parameters" $matrix $tile
                    done
                elif [ $TPM_POWER_SET -eq 1 ]; then
                    for ((case = 1; case <= $NCASES; case++)); do
                        echo "*** TPM: Measuring energy/case" $algorithm "case" $case "with parameters" $TPM_THREADS $matrix $tile

                        sudo -E ${TPM}/power/TPMpower $case $lowest_freq $default_freq &
                        sleep 0.1
                        echo "*** TPM: Power server launched"

                        LD_PRELOAD=$OPENMP_PRELOAD:$TRACELIB_PRELOAD numactl --physcpubind=0-$(expr $TPM_THREADS - 1) --membind=0-$(expr $MEMBIND - 1) ${TPM_BENCHMARKS}/tpm_benchmark -a $algorithm -m $matrix -b $tile
                        echo "*** TPM: Measuring energy/case done" $algorithm "case" $case "with parameters" $TPM_THREADS $matrix $tile
                    done
                else
                    LD_PRELOAD=$OPENMP_PRELOAD:$TRACELIB_PRELOAD numactl --physcpubind=0 --membind=0 ${TPM_BENCHMARKS}/tpm_benchmark -a $algorithm -m $matrix -b $tile
                fi
            done
        done
    done
done

ps -ef | grep TPMpower | grep -v grep | awk '{print $2}' | sudo xargs -r kill -9
echo "*** TPM: Submission finished"
