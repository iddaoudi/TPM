#!/bin/bash

# Set OpenBLAS threads to 1
export OPENBLAS_NUM_THREADS=1

# Parameters
algo=(cholesky)
msize=(16384 32768)
bsize=(1024 2048)
threads=32
numa=16
targets=("1" "2" "3" "4" "5" "6" "7" "8" "9" "10" "11" "12" "13" "14" "15" "16")
iteration=("1" "2" "3") # "4" "5")

export TPM_PAPI=1
export TPM_TRACE=0
export TPM_POWER=0

frequency=min
governor=ondemand

export TPM_MACHINE=local
export OMP_PLACES=cores
export OMP_PROC_BIND=close

######################################################

# LD_PRELOAD
ROOT=/home/cc
omp_so=${ROOT}/llvm-project/build-openmp/lib/libomp.so
trace_so=${ROOT}/TPM/trace/libtpm_trace.so
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${ROOT}/OpenBLAS/build/lib

######################################################

if [[ "$algo" -eq "qr" ]];
then
    ulimit -s unlimited
fi

if [[ ${TPM_TRACE} -eq 1 ]]
then
    cd trace
    rm -rf CMakeFiles/ cmake_install.cmake CMakeCache.txt Makefile libtpm_trace.so
    cmake .
    make clean && make -s
    cd -
    echo "* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"
    echo "TPM bash log: Trace OK"
    echo "* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"
else
	threads=1
	targets=("1")
	iteration=("1") 
fi

# Compile source part
cd algorithms
make clean && make -s
cd -
echo "* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"
echo "TPM bash log: Algorithms OK"
echo "* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"

# Compile power control part
if [[ ${TPM_POWER} -eq 1 ]]
then
	cd power
	make clean && make -s
	cd -
	echo "* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"
	echo "TPM bash log: Power OK"
	echo "* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"
fi

######################################################

for algorithm in ${algo[*]}
do
	for thread in ${threads[*]}
	do
		for matrix in ${msize[*]}
		do
			for tile in ${bsize[*]}
			do
				for iter in ${iteration[*]}
				do
				    for target in ${targets[*]}
                    do
					    echo "TPM bash log: Launching" $algorithm "run with parameters" $matrix $tile "in scenario" $target "for" $thread "threads in iteration" $iter
					    export TPM_ITER=$iter
					    export OMP_NUM_THREADS=$thread

                        if [[ "$algorithm" == "lu" ]];
                        then
                            targets=("1" "2" "3" "4" "5" "6" "7" "8")
                        fi
					    # Start server
					    if [[ ${TPM_POWER} -eq 1 ]]
					    then
							sudo -E power/tpm_server $thread $governor $frequency $target ${algo} &
	                        sleep 1
                            echo "BASH LAUNCHED SERVER"
						fi
					    # Launch runs
					    if [[ $thread -gt $numa ]]
					    then
					    	if [[ ${TPM_TRACE} -eq 1 ]]
					    	then
					    		LD_PRELOAD=$omp_so:$trace_so numactl --physcpubind=0-$(expr $thread - 1) --membind=0,1 algorithms/tpm_benchmark -a $algorithm -m $matrix -b $tile
                            else
					    		LD_PRELOAD=$omp_so numactl --physcpubind=0-$(expr $thread - 1) --membind=0,1 algorithms/tpm_benchmark -a $algorithm -m $matrix -b $tile
					    	fi
					    else
					    	if [[ ${TPM_TRACE} -eq 1 ]]
					    	then
                                LD_PRELOAD=$omp_so:$trace_so numactl --physcpubind=0-$(expr $thread - 1) --membind=0 algorithms/tpm_benchmark -a $algorithm -m $matrix -b $tile
                            else
					    		LD_PRELOAD=$omp_so numactl --physcpubind=0-$(expr $thread - 1) --membind=0 algorithms/tpm_benchmark -a $algorithm -m $matrix -b $tile
					    	fi
					    fi
					    echo "TPM bash log: "$algorithm "run with parameters" $matrix $tile "in scenario" $target "for" $thread "threads in iteration" $iter " done!"
                    done
				done
			done
		done
	done
done

echo "Experiments finished!"
if [[ ${TPM_POWER} -eq 1 ]]
then
	ps -ef | grep tpm_server | grep -v grep | awk '{print $2}' | sudo xargs -r kill -9
fi
